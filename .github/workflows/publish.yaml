name: "publish"
run-name: "Publish changes for commit ${{ github.sha }}"

on:
  push:
    branches: ["canon"]
    # If changelog was modified, it means that was the release
    # Sane implementation would require creating steps specifically to extract tags
    # (something that is not needed atm).
    paths:
      - "CHANGELOG.md"
# Author soapbox:
# GitHub actions do not honor combination of branches and tags as logical AND
# statement - instead, it treats it as an OR requirements. This is counter-intuitive
# and unhelpful behavior, but it is what it is.
# Fortunately, combination of branches and path results in logical AND.
# Therefore, the solution below will not work
#    tags:
#      # Run only for releases
#      - 'v*'

jobs:
  publish:
    name: "publish"
    runs-on: ["ubuntu-latest"]
    steps:
      - name: "Install nix"
        uses: cachix/install-nix-action@v26
        with:
          # This should not be here
          # as it introduces the possibility of someone
          # loading the wrong dependency by accident.
          # However, lack of this entry,
          # makes the GitHub action log output have
          # warnings regarding this, which makes
          # debugging harder if someone does not know
          # it can be ignored. 
          nix_path: nixpkgs=channel:nixos-unstable

      - name: "Checkout 'canon' branch of the repo"
        uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 0
          fetch-tags: true
          # This is important, we do not do merges
          ref: ${{ github.event.pull_request.head.sha }}

      - name: "Publish the images to harbor"
        shell: bash
        run: |2
          $(nix-build --no-out-link default.nix -A images.all.push) harbor.apps.morrigna.rules-nix.build/explore-bzl '${{ secrets.harbor_user }}' '${{ secrets.harbor_token }}'

      - name: "Get project meta"
        id: get_project_meta
        shell: bash
        run: |2
          export version="v$(nix-shell --run 'cog get-version 2>/dev/null')"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          nix-shell --run "cog changelog --at ${version}" >./release-notes.md 2>/dev/null

      - name: "Create GitHub release"
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.gh_pat }}
          bodyFile: ./release-notes.md
          makeLatest: "legacy"
          tag: ${{ steps.get_project_meta.outputs.version }}
